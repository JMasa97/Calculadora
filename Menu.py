import tkinter as tk
from tkinter.constants import BOTH, CENTER
import plotly.graph_objects as go
from tkinter import messagebox
from tkinter.ttk import *
from openpyxl import load_workbook
from math import atan, log10, tanh
root= tk.Tk()
root.title('Proyecto Radiocomunicaciones')
root.iconbitmap("picture_folder_19790.ico")
canvas1 = tk.Canvas(root, width = 400, height = 500,  relief = 'raised')
canvas1.pack()

label1 = tk.Label(root, text='Radiocomunicaciones')
label1.config(font=('helvetica', 14))
canvas1.create_window(200, 25, window=label1)

label2 = tk.Label(root, text='¿Que desea consultar el día de hoy?\n\n')
label2.config(font=('helvetica', 10))
canvas1.create_window(200, 75, window=label2)
label3 = tk.Label(root, text='1.- Simbología de Radiocomunicaciones\n 2.-Conversion de unidades\n 3.-Modelos de propagación')
canvas1.create_window(200, 100, window=label3)

entry1 = tk.Entry (root) 
canvas1.create_window(200, 140, window=entry1)
entry2 = tk.Entry (root) 
entry3 = tk.Entry (root) 
entry4 = tk.Entry (root)
entry5 = tk.Entry (root)
entry6 = tk.Entry (root) 
entry7 = tk.Entry (root)
entry8 = tk.Entry (root)  
entry9 = tk.Entry (root) 
entry10 = tk.Entry (root) 
entry11 = tk.Entry (root) 
entry12 = tk.Entry (root) 
def regreso ():
    mensaje = tk.messagebox.askquestion ('','¿Desea regresar al menu principal?',icon = 'info')
    if mensaje == 'yes':
       canvas1.delete("all")
       entry1.delete
       canvas1.config(width=400,height=300)
       label1 = tk.Label(root, text='Radiocomunicaciones')
       label1.config(font=('helvetica', 14))
       canvas1.create_window(200, 25, window=label1)
       label2 = tk.Label(root, text='¿Que desea consultar el día de hoy?\n\n')
       label2.config(font=('helvetica', 10))
       canvas1.create_window(200, 75, window=label2)
       label3 = tk.Label(root, text='1.- Simbología de Radiocomunicaciones\n 2.-Conversion de unidades\n 3.-Modelos de propagación')
       canvas1.create_window(200, 100, window=label3)
       canvas1.create_window(200, 140, window=entry1)
       buttonmaster = tk.Button(text='Introduzca la opción deseada', command=opmenu, bg='red4', fg='white', font=('helvetica', 9, 'bold'))
       canvas1.create_window(200, 180, window=buttonmaster)
    else:
        return
def todos ():
    fig = go.Figure(data=[go.Table(header=dict(values=['Símbolo', 'Significado','Unidades']),
                 cells=dict(values=[['PTx', 'PRx', '\u03BB', 'GTx', 'GRx', '\u03B1', 'Aef', 'h', 'BW', 'C/N', 'Xm', 'l', 'LTx', 'LRx', 'LFS', 'LM'], ['Potencia de Transmision', 'Potencia de Recepcion', 'Atenuacion', 'Ganancia de antena transmisora', 'Ganancia de antena receptora', 'Longitud de Onda', 'Area efectiva', 'Altura', 'Ancho de Banda', 'Relacion portadora/Ruido', 'Atenuacion debido a multitrayectoria', 'Distancia Estación Terrena-Satelite', 'Perdidas en el transmisor ', 'Perdidas en el receptor ', 'Perdida de trayectoria', 'Perdida de fuentes variadas'],
                 ['dB','dB','dB','dB','dB','m/s','m^2','m','Hz','dB','dB','km''dB','dB','dB','dB''dB']]))
                                   ])
    fig.show()
    button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
    canvas1.create_window(200, 250, window=button2)
def escoger ():
    canvas1.delete("all")
    print(canvas1.create_window(200, 140, window=entry2))
    button1 = tk.Button(text='Introduzca la opción deseada', command=opchida, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(200, 180, window=button1)
    button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
    canvas1.create_window(100, 250, window=button2)
    button3 = tk.Button (root, text='Regresar al menú anterior',command=sim,bg='white',fg='red4')
    canvas1.create_window(300, 250, window=button3)
def opchida ():
    x1 = [entry2.get()]
    canvas1.delete("all")
    workbook = load_workbook(filename="Radio.xlsx",data_only=True)
    sheet = workbook.active
    celda = sheet['A2':'C17']
    lista=[]
    for fila in celda:
        elemento=[celda.value for celda in fila]
        lista.append(elemento)
    for papi in lista:
        if x1==[papi[1]]:
            canvas1.delete("all")
            print(canvas1.create_window(200, 140, window=entry2))
            label4 = tk.Label(root, text= papi)
            label4.config(font=('helvetica', 10))
            button1 = tk.Button(text='Introduzca la opción deseada', command=opchida, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
            button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
            button3 = tk.Button (root, text='Regresar al menú anterior',command=sim,bg='white',fg='red4')
            canvas1.create_window(300, 250, window=button3)
            canvas1.create_window(100, 250, window=button2)
            canvas1.create_window(200, 180, window=button1)
            canvas1.create_window(200, 210, window=label4)
            break
        elif x1==[papi[0]]:
            canvas1.delete("all")
            print(canvas1.create_window(200, 140, window=entry2))
            label4 = tk.Label(root, text= papi)
            label4.config(font=('helvetica', 10))
            button1 = tk.Button(text='Introduzca la opción deseada', command=opchida, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
            button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
            button3 = tk.Button (root, text='Regresar al menú anterior',command=sim,bg='white',fg='red4')
            canvas1.create_window(300, 250, window=button3)
            canvas1.create_window(100, 250, window=button2)
            canvas1.create_window(200, 180, window=button1)
            canvas1.create_window(200, 210, window=label4)
            break
        else:
            label4 = tk.Label(root, text= 'Opcion Inexistente, seleccione de nuevo porfavor')
            label4.config(font=('helvetica', 10))
            print(canvas1.create_window(200, 140, window=entry2))
            button1 = tk.Button(text='Introduzca la opción deseada', command=opchida, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
            button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
            button3 = tk.Button (root, text='Regresar al menú anterior',command=sim,bg='white',fg='red4')
            canvas1.create_window(300, 250, window=button3)
            canvas1.create_window(100, 250, window=button2)
            canvas1.create_window(200, 180, window=button1)
            canvas1.create_window(200, 210, window=label4)
def sim():
        canvas1.delete("all")
        label1 = tk.Label(root, text='Simbología de Radiocomunicaciones')
        label1.config(font=('helvetica', 14))
        canvas1.create_window(200, 25, window=label1)
        label2 = tk.Label(root, text='¿Que desea hacer a continuación?')
        label2.config(font=('helvetica', 10))
        canvas1.create_window(200, 75, window=label2)
        button1 = tk.Button (root, text='Mostrar todos los símbolos',command=todos,bg='gold2',fg='white') 
        button3 = tk.Button (root, text='Elegir unidad',command=escoger,bg='green4',fg='white')
        button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
        canvas1.create_window(200, 100, window=button1)
        canvas1.create_window(200, 150, window=button3)
        canvas1.create_window(200, 250, window=button2)
def conver ():
        canvas1.delete("all")
        label1 = tk.Label(root, text='Conversion de unidades')
        label1.config(font=('helvetica', 14))
        canvas1.create_window(200, 25, window=label1)
        label2 = tk.Label(root, text='¿Que unidad desea convertir a continuación?')
        label2.config(font=('helvetica', 10))
        canvas1.create_window(200, 75, window=label2)
        button1 = tk.Button (root, text='Tiempo a frecuencia',command=tf,bg='gold2',fg='white') 
        button3 = tk.Button (root, text='Potencia / db / dbm',command=db,bg='green4',fg='white')
        button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
        canvas1.create_window(200, 100, window=button1)
        canvas1.create_window(200, 150, window=button3)
        canvas1.create_window(200, 250, window=button2)
def model ():
        canvas1.delete("all")
        canvas1.config(width=400,height=300)
        label1 = tk.Label(root, text='Modelos de propagación')
        label1.config(font=('helvetica', 14))
        canvas1.create_window(200, 25, window=label1)
        label2 = tk.Label(root, text='¿Que modelo desea utilizar?')
        label2.config(font=('helvetica', 10))
        canvas1.create_window(200, 50, window=label2)
        button1 = tk.Button (root, text='Modelo de propagación Okumura',command=oku,bg='gold2',fg='white') 
        button3 = tk.Button (root, text='Modelo de propagación Hata',command=hata,bg='green4',fg='white')
        button4 = tk.Button (root, text='Modelo de propagación Walfisch-Bertoni',command=wb,bg='firebrick',fg='white') 
        button5 = tk.Button (root, text='Modelo de propagación Walfisch-Ikegami',command=wi,bg='fuchsia',fg='white') 
        button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
        canvas1.create_window(200, 80, window=button1)
        canvas1.create_window(200, 120, window=button3)
        canvas1.create_window(200, 160, window=button4)
        canvas1.create_window(200, 200, window=button5)
        canvas1.create_window(200, 250, window=button2)
def opmenu ():   
    x1 = int(entry1.get())
    if x1==int(1):
        sim()
    elif x1==int(2):
        conver()
    elif x1==int(3):
        model()
    else:
        label4 = tk.Label(root, text= 'Opcion Inexistente, seleccione de nuevo porfavor')
        label4.config(font=('helvetica', 10))
        canvas1.create_window(200, 210, window=label4)
def opoku():
    canvas1.delete("all")
    canvas1.config(width=800,height=850)
    label = tk.Label(root, text='Modelos de Okumura')
    label.config(font=('helvetica', 14))
    canvas1.create_window(400, 50, window=label)
    label0 = tk.Label(root, text="""Rango de funcionamiento: (150 - 1920 MHz), 
    (30-1000 m (Altura de antena transmisora), (1 - 100 km (distancia entre antenas)), 
    (3-10 m (Altura de antena receptora o móvil)), """)
    label0.config(font=('helvetica', 14))
    canvas1.create_window(400, 100, window=label0)
    print(canvas1.create_window(400, 200, window=entry5))
    label1 = tk.Label(root, text= 'Introduzca la frecuencia (MHz)')
    label1.config(font=('helvetica', 10))
    canvas1.create_window(400, 250, window=label1)
    print(canvas1.create_window(400, 300, window=entry6))
    label2 = tk.Label(root, text= 'Introduzca la distancia (km)')
    label2.config(font=('helvetica', 10))
    canvas1.create_window(400, 350, window=label2)
    print(canvas1.create_window(400, 400, window=entry7))
    label3 = tk.Label(root, text= 'Introduzca la atenuación Media Relativa (Pérdidas de Espacio Libre)')
    label3.config(font=('helvetica', 10))
    canvas1.create_window(400, 450, window=label3)
    print(canvas1.create_window(400, 500, window=entry8))
    label4 = tk.Label(root, text= 'Introduzca el Factor de Ganancia Antena transmisora (db)')
    label4.config(font=('helvetica', 10))
    canvas1.create_window(400, 550, window=label4)
    print(canvas1.create_window(400, 600, window=entry9))
    label5 = tk.Label(root, text= 'Introduzca el Factor de Ganancia Antena receptora (db)')
    label5.config(font=('helvetica', 10))
    canvas1.create_window(400, 650, window=label5)
    print(canvas1.create_window(400, 700, window=entry10))
    label6 = tk.Label(root, text= 'Introduzca el Factor de Correción del Entorno(db)')
    label6.config(font=('helvetica', 10))
    canvas1.create_window(400, 750, window=label6)        
    button1 = tk.Button(text='Presione para procesar sus datos', command=opoku1, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(400, 790, window=button1)
    button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
    canvas1.create_window(600, 830, window=button2)
    button3 = tk.Button (root, text='Regresar al menú de modelos',command=model,bg='ivory3',fg='white')
    canvas1.create_window(200, 830, window=button3)
def opoku1():
    canvas1.delete("all")
    canvas1.config(width=800,height=850)
    x1 = float(entry5.get())
    x2 = float(entry6.get())
    lb = 32.45+20*log10(x1)+20*log10(x2)
    amu = float(entry7.get())
    gte = float(entry8.get())
    gre = float(entry9.get())
    garea = float(entry10.get())
    l = lb+amu-gte-gre-garea 
    labell = tk.Label(root, text= (l,'db'))
    labell.config(font=('helvetica', 14))
    canvas1.create_window(400, 60, window=labell)
    label = tk.Label(root, text='Modelo de Okumura')
    label.config(font=('helvetica', 14))
    canvas1.create_window(400, 20, window=label)
    label0 = tk.Label(root, text="""Rango de funcionamiento: (150 - 1920 MHz), 
    (30-1000 m (Altura de antena transmisora), (1 - 100 km (distancia entre antenas)), 
    (3-10 m (Altura de antena receptora o móvil)), """)
    label0.config(font=('helvetica', 14))
    canvas1.create_window(400, 120, window=label0)
    print(canvas1.create_window(400, 200, window=entry5))
    label1 = tk.Label(root, text= 'Introduzca la frecuencia (MHz)')
    label1.config(font=('helvetica', 10))
    canvas1.create_window(400, 250, window=label1)
    print(canvas1.create_window(400, 300, window=entry6))
    label2 = tk.Label(root, text= 'Introduzca la distancia (km)')
    label2.config(font=('helvetica', 10))
    canvas1.create_window(400, 350, window=label2)
    print(canvas1.create_window(400, 400, window=entry7))
    label3 = tk.Label(root, text= 'Introduzca la atenuación Media Relativa a las Pérdidas de Espacio Libre (db)')
    label3.config(font=('helvetica', 10))
    canvas1.create_window(400, 450, window=label3)
    print(canvas1.create_window(400, 500, window=entry8))
    label4 = tk.Label(root, text= 'Introduzca el Factor de Ganancia Antena transmisora (db)')
    label4.config(font=('helvetica', 10))
    canvas1.create_window(400, 550, window=label4)
    print(canvas1.create_window(400, 600, window=entry9))
    label5 = tk.Label(root, text= 'Introduzca el Factor de Ganancia Antena receptora (db)')
    label5.config(font=('helvetica', 10))
    canvas1.create_window(400, 650, window=label5)
    print(canvas1.create_window(400, 700, window=entry10))
    label6 = tk.Label(root, text= 'Introduzca el Factor de Correción del Entorno(db)')
    label6.config(font=('helvetica', 10))
    canvas1.create_window(400, 750, window=label6)    
    button1 = tk.Button(text='Presione para procesar sus datos', command=opoku1, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(400, 790, window=button1)
    button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
    canvas1.create_window(600, 830, window=button2)
    button3 = tk.Button (root, text='Regresar al menú de modelos',command=model,bg='ivory3',fg='white')
    canvas1.create_window(200, 830, window=button3)
def oku():
    canvas1.delete("all")
    canvas1.config(width=600,height=500)
    label1 = tk.Label(root, text='Modelo de propagación Okumura')
    label1.config(font=('helvetica', 14))
    canvas1.create_window(300, 25, window=label1)
    label2 = tk.Label(root, text="""El modelo Okumura es un modelo empírico
    para cálculos de pérdidas de propagación en entornos urbanos
    (dichos cálculos fueron tomados en Japón)
    Las ventajas con las que cuenta este modelo son las siguientes:
        ¬ Es un modelo muy simple y eficaz (en términos de precisión 
          para sistemas celulares en entornos irregulares. Su efectividad 
          es mayor cuando se aplica para ciudades densas de edificios altos)
        
        ¬ Sus curvas de atenuación media relativas están en función de la
          frecuencia y la distancia entre móvil-estación base.
    
    l = lb+a(mu)-g(te)-g(re)-g(area) """)
    label2.config(font=('helvetica', 12))
    canvas1.create_window(300, 150, window=label2)
    buttonmaster = tk.Button(text='¿Desea Continuar?', command=opoku, bg='darkblue', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(300, 330, window=buttonmaster)
    button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
    canvas1.create_window(200, 450, window=button2)
    button3 = tk.Button (root, text='Regresar al menú de modelos',command=model,bg='ivory3',fg='white')
    canvas1.create_window(400, 450, window=button3)
def ophata():
    canvas1.delete("all")
    canvas1.config(width=1000,height=850)
    label = tk.Label(root, text='Modelo de Hata')
    label.config(font=('helvetica', 14))
    canvas1.create_window(500, 50, window=label)
    label0 = tk.Label(root, text="""Rango de funcionamiento: (100-1500 MHz), 
    (1 - 20 km (distancia entre antenas)), (30-200 m (Altura de Antena Transmisora)),
    (1 - 10 m (Altura de Antena Transmisora))""")
    label0.config(font=('helvetica', 14))
    canvas1.create_window(500, 100, window=label0)
    print(canvas1.create_window(500, 200, window=entry5))
    label1 = tk.Label(root, text= 'Introduzca la frecuencia (MHz)')
    label1.config(font=('helvetica', 10))
    canvas1.create_window(500, 250, window=label1)
    print(canvas1.create_window(500, 300, window=entry6))
    label2 = tk.Label(root, text= 'Introduzca la distancia (km)')
    label2.config(font=('helvetica', 10))
    canvas1.create_window(500, 350, window=label2)
    print(canvas1.create_window(500, 400, window=entry7))
    label3 = tk.Label(root, text= 'Introduzca la Altura de la Antena Transmisora (m)')
    label3.config(font=('helvetica', 10))
    canvas1.create_window(500, 450, window=label3)
    print(canvas1.create_window(500, 500, window=entry8))
    label4 = tk.Label(root, text= 'Introduzca la Altura de la Antena Receptora (m)')
    label4.config(font=('helvetica', 10))
    canvas1.create_window(500, 550, window=label4)     
    button1 = tk.Button(text='Presione para procesar sus datos (Entorno Urbano)', command=ophata1, bg='green', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(175, 790, window=button1)
    button11 = tk.Button(text='Presione para procesar sus datos (Entorno Surbano)', command=ophata2, bg='lightcyan', fg='gold', font=('helvetica', 9, 'bold'))
    canvas1.create_window(500, 790, window=button11)
    button12 = tk.Button(text='Presione para procesar sus datos (Entorno Rural)', command=ophata3, bg='red', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(825, 790, window=button12)
    button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='teal',fg='white')
    canvas1.create_window(350, 830, window=button2)
    button3 = tk.Button (root, text='Regresar al menú de modelos',command=model,bg='ivory3',fg='white')
    canvas1.create_window(640, 830, window=button3)
def ophata1():
    canvas1.delete("all")
    canvas1.config(width=1000,height=850)
    f = float(entry5.get())
    d = float(entry6.get())
    hte = float(entry7.get())
    hre = float(entry8.get())
    if f<300:
        are=8.29*(log10(1.54*hre)**2-1.1)
    elif f>=300:
        are=3.2*(log10(11.45*hre)**2-4.97)
    l=69.5+26.16*log10(f)-13.82*log10(hte)-are+(44.9-6.55*log10(hte))*log10(d)
    labell = tk.Label(root, text= (l,'db'))
    labell.config(font=('helvetica', 14))
    canvas1.create_window(500, 650, window=labell)
    label = tk.Label(root, text='Modelo de Hata')
    label.config(font=('helvetica', 14))
    canvas1.create_window(500, 50, window=label)
    label0 = tk.Label(root, text="""Rango de funcionamiento: (100-1500 MHz), 
    (1 - 20 km (distancia entre antenas)), (30-200 m (Altura de Antena Transmisora)),
    (1 - 10 m (Altura de Antena Transmisora))""")
    label0.config(font=('helvetica', 14))
    canvas1.create_window(500, 100, window=label0)
    print(canvas1.create_window(500, 200, window=entry5))
    label1 = tk.Label(root, text= 'Introduzca la frecuencia (MHz)')
    label1.config(font=('helvetica', 10))
    canvas1.create_window(500, 250, window=label1)
    print(canvas1.create_window(500, 300, window=entry6))
    label2 = tk.Label(root, text= 'Introduzca la distancia (km)')
    label2.config(font=('helvetica', 10))
    canvas1.create_window(500, 350, window=label2)
    print(canvas1.create_window(500, 400, window=entry7))
    label3 = tk.Label(root, text= 'Introduzca la Altura de la Antena Transmisora (m)')
    label3.config(font=('helvetica', 10))
    canvas1.create_window(500, 450, window=label3)
    print(canvas1.create_window(500, 500, window=entry8))
    label4 = tk.Label(root, text= 'Introduzca la Altura de la Antena Receptora (m)')
    label4.config(font=('helvetica', 10))
    canvas1.create_window(500, 550, window=label4)     
    button1 = tk.Button(text='Presione para procesar sus datos (Entorno Urbano)', command=ophata1, bg='green', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(175, 790, window=button1)
    button11 = tk.Button(text='Presione para procesar sus datos (Entorno Surbano)', command=ophata2, bg='lightcyan', fg='gold', font=('helvetica', 9, 'bold'))
    canvas1.create_window(500, 790, window=button11)
    button12 = tk.Button(text='Presione para procesar sus datos (Entorno Rural)', command=ophata3, bg='red', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(825, 790, window=button12)
    button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='teal',fg='white')
    canvas1.create_window(350, 830, window=button2)
    button3 = tk.Button (root, text='Regresar al menú de modelos',command=model,bg='red4',fg='white')
    canvas1.create_window(640, 830, window=button3)

def ophata2():
    canvas1.delete("all")
    canvas1.config(width=1000,height=850)
    f = float(entry5.get())
    d = float(entry6.get())
    hte = float(entry7.get())
    hre = float(entry8.get())
    are=(1.1*log10(f)-0.7)*hre-(1.56*log10(f)-0.8)
    lurb=69.5+26.16*log10(f)-13.82*log10(hte)-are+(44.9-6.55*log10(hte))*log10(d)
    l=lurb-2*(log10(f/28))**2-5.4
    labell = tk.Label(root, text= (l,'db'))
    labell.config(font=('helvetica', 14))
    canvas1.create_window(500, 650, window=labell)
    label = tk.Label(root, text='Modelo de Hata')
    label.config(font=('helvetica', 14))
    canvas1.create_window(500, 50, window=label)
    label0 = tk.Label(root, text="""Rango de funcionamiento: (100-1500 MHz), 
    (1 - 20 km (distancia entre antenas)), (30-200 m (Altura de Antena Transmisora)),
    (1 - 10 m (Altura de Antena Transmisora))""")
    label0.config(font=('helvetica', 14))
    canvas1.create_window(500, 100, window=label0)
    print(canvas1.create_window(500, 200, window=entry5))
    label1 = tk.Label(root, text= 'Introduzca la frecuencia (MHz)')
    label1.config(font=('helvetica', 10))
    canvas1.create_window(500, 250, window=label1)
    print(canvas1.create_window(500, 300, window=entry6))
    label2 = tk.Label(root, text= 'Introduzca la distancia (km)')
    label2.config(font=('helvetica', 10))
    canvas1.create_window(500, 350, window=label2)
    print(canvas1.create_window(500, 400, window=entry7))
    label3 = tk.Label(root, text= 'Introduzca la Altura de la Antena Transmisora (m)')
    label3.config(font=('helvetica', 10))
    canvas1.create_window(500, 450, window=label3)
    print(canvas1.create_window(500, 500, window=entry8))
    label4 = tk.Label(root, text= 'Introduzca la Altura de la Antena Receptora (m)')
    label4.config(font=('helvetica', 10))
    canvas1.create_window(500, 550, window=label4)        
    button1 = tk.Button(text='Presione para procesar sus datos (Entorno Urbano)', command=ophata1, bg='green', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(175, 790, window=button1)
    button11 = tk.Button(text='Presione para procesar sus datos (Entorno Surbano)', command=ophata2, bg='lightcyan', fg='gold', font=('helvetica', 9, 'bold'))
    canvas1.create_window(500, 790, window=button11)
    button12 = tk.Button(text='Presione para procesar sus datos (Entorno Rural)', command=ophata3, bg='red', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(825, 790, window=button12)
    button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='teal',fg='white')
    canvas1.create_window(350, 830, window=button2)
    button3 = tk.Button (root, text='Regresar al menú de modelos',command=model,bg='red4',fg='white')
    canvas1.create_window(640, 830, window=button3)
def ophata3():
    canvas1.delete("all")
    canvas1.config(width=1000,height=850)
    f = float(entry5.get())
    d = float(entry6.get())
    hte = float(entry7.get())
    hre = float(entry8.get())
    are=(1.1*log10(f)-0.7)*hre-(1.56*log10(f)-0.8)
    lurb=69.5+26.16*log10(f)-13.82*log10(hte)-are+(44.9-6.55*log10(hte))*log10(d)
    l=lurb-4.78*(log10(f))**2-18.33*log10(f)-40.98
    labell = tk.Label(root, text= (l,'db'))
    labell.config(font=('helvetica', 14))
    canvas1.create_window(500, 650, window=labell)
    label = tk.Label(root, text='Modelo de Hata')
    label.config(font=('helvetica', 14))
    canvas1.create_window(500, 50, window=label)
    label0 = tk.Label(root, text="""Rango de funcionamiento: (100-1500 MHz), 
    (1 - 20 km (distancia entre antenas)), (30-200 m (Altura de Antena Transmisora)),
    (1 - 10 m (Altura de Antena Transmisora))""")
    label0.config(font=('helvetica', 14))
    canvas1.create_window(500, 100, window=label0)
    print(canvas1.create_window(500, 200, window=entry5))
    label1 = tk.Label(root, text= 'Introduzca la frecuencia (MHz)')
    label1.config(font=('helvetica', 10))
    canvas1.create_window(500, 250, window=label1)
    print(canvas1.create_window(500, 300, window=entry6))
    label2 = tk.Label(root, text= 'Introduzca la distancia (km)')
    label2.config(font=('helvetica', 10))
    canvas1.create_window(500, 350, window=label2)
    print(canvas1.create_window(500, 400, window=entry7))
    label3 = tk.Label(root, text= 'Introduzca la Altura de la Antena Transmisora (m)')
    label3.config(font=('helvetica', 10))
    canvas1.create_window(500, 450, window=label3)
    print(canvas1.create_window(500, 500, window=entry8))
    label4 = tk.Label(root, text= 'Introduzca la Altura de la Antena Receptora (m)')
    label4.config(font=('helvetica', 10))
    canvas1.create_window(500, 550, window=label4)       
    button1 = tk.Button(text='Presione para procesar sus datos (Entorno Urbano)', command=ophata1, bg='green', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(175, 790, window=button1)
    button11 = tk.Button(text='Presione para procesar sus datos (Entorno Surbano)', command=ophata2, bg='lightcyan', fg='gold', font=('helvetica', 9, 'bold'))
    canvas1.create_window(500, 790, window=button11)
    button12 = tk.Button(text='Presione para procesar sus datos (Entorno Rural)', command=ophata3, bg='red', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(825, 790, window=button12)
    button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='teal',fg='white')
    canvas1.create_window(350, 830, window=button2)
    button3 = tk.Button (root, text='Regresar al menú de modelos',command=model,bg='red4',fg='white')
    canvas1.create_window(640, 830, window=button3)
def hata():
    canvas1.delete("all")
    canvas1.config(width=600,height=500)
    label1 = tk.Label(root, text='Modelo de propagación Hata (Okumura - Hata)')
    label1.config(font=('helvetica', 14))
    canvas1.create_window(300, 25, window=label1)
    label2 = tk.Label(root, text=""" Este modelo surge del desarrollo de 
    expresiones numéricas para las curvas de propagación normalizadas 
    del modelo de Okumura (mostrado en este mismo menú).
    
    l(urbano)=69.5+26.16*log10(f)-13.82*log10(hte)-a(re)+(44.9-6.55*log10(hte))*log10(d)

    l(suburbano)=l(urbano)-2*(log10(f/28))**2-5.4

    l(rural)=l(urbano)-4.78*(log10(f))**2-18.33*log10(f)-40.98""")
    label2.config(font=('helvetica', 12))
    canvas1.create_window(300, 150, window=label2)
    buttonmaster = tk.Button(text='¿Desea Continuar?', command=ophata, bg='darkblue', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(300, 330, window=buttonmaster)
    button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
    canvas1.create_window(150, 450, window=button2)
    button3 = tk.Button (root, text='Regresar al menú de modelos',command=model,bg='ivory3',fg='white')
    canvas1.create_window(450, 450, window=button3)
def opwb():
    canvas1.delete("all")
    canvas1.config(width=800,height=850)
    label = tk.Label(root, text='Modelo de Walfisch - Bertoni')
    label.config(font=('helvetica', 14))
    canvas1.create_window(400, 50, window=label)
    label0 = tk.Label(root, text="""Rango de funcionamiento: (300 - 3000 MHz), 
    (2 - 50 km (distancia entre antenas)), (40 m (Altura de antena receptora o móvil))""")
    label0.config(font=('helvetica', 14))
    canvas1.create_window(400, 100, window=label0)
    print(canvas1.create_window(400, 200, window=entry5))
    label1 = tk.Label(root, text= 'Introduzca la frecuencia (MHz)')
    label1.config(font=('helvetica', 10))
    canvas1.create_window(400, 250, window=label1)
    print(canvas1.create_window(400, 300, window=entry6))
    label2 = tk.Label(root, text= 'Introduzca la distancia (km)')
    label2.config(font=('helvetica', 10))
    canvas1.create_window(400, 350, window=label2)
    print(canvas1.create_window(400, 400, window=entry7))
    label3 = tk.Label(root, text= 'Introduzca la Altura de Antena Transmisora')
    label3.config(font=('helvetica', 10))
    canvas1.create_window(400, 450, window=label3)
    print(canvas1.create_window(400, 500, window=entry8))
    label4 = tk.Label(root, text= 'Introduzca la Altura de Antena Receptora')
    label4.config(font=('helvetica', 10))
    canvas1.create_window(400, 550, window=label4)
    print(canvas1.create_window(400, 600, window=entry9))
    label5 = tk.Label(root, text= 'Introduzca la Altura Media de Edificios')
    label5.config(font=('helvetica', 10))
    canvas1.create_window(400, 650, window=label5)
    print(canvas1.create_window(400, 700, window=entry10))
    label6 = tk.Label(root, text= 'Introduzca la Anchura promedio entre centros de Edificios (m)')
    label6.config(font=('helvetica', 10))
    canvas1.create_window(400, 750, window=label6)        
    button1 = tk.Button(text='Presione para procesar sus datos', command=opwb1, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(400, 790, window=button1)
    button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
    canvas1.create_window(200, 830, window=button2)
    button3 = tk.Button (root, text='Regresar al menú de modelos',command=model,bg='ivory3',fg='white')
    canvas1.create_window(600, 830, window=button3)
def opwb1():
    canvas1.delete("all")
    canvas1.config(width=800,height=850)
    f = float(entry5.get())
    d = float(entry6.get())
    lb = 32.45+20*log10(f)+20*log10(d)
    ht = float(entry7.get())
    hr = float(entry8.get())
    hR = float(entry9.get())
    deltaht= ht-hR
    deltahr= hR-hr
    b = float(entry10.get())/100
    A=5*log10((b**2)/2+deltahr**2)-9*log10(b)+20*log10(atan((2*deltahr)/2))
    Lex=57.1+A+log10(f)+18*(log10((d-b/2)/deltaht)-log10(1-(((d-b)/2)**2)/(17*deltaht)))
    l=lb+Lex
    labell = tk.Label(root, text= (l,'db'))
    labell.config(font=('helvetica', 14))
    canvas1.create_window(400, 60, window=labell)
    label = tk.Label(root, text='Modelo de Walfisch - Bertoni')
    label.config(font=('helvetica', 14))
    canvas1.create_window(400, 20, window=label)
    label0 = tk.Label(root, text="""Rango de funcionamiento: (150 - 1920 MHz), 
    (30-1000 m (Altura de antena transmisora), (1 - 100 km (distancia entre antenas)), 
    (3-10 m (Altura de antena receptora o móvil)), """)
    label0.config(font=('helvetica', 14))
    canvas1.create_window(400, 120, window=label0)
    print(canvas1.create_window(400, 200, window=entry5))
    label1 = tk.Label(root, text= 'Introduzca la frecuencia (MHz)')
    label1.config(font=('helvetica', 10))
    canvas1.create_window(400, 250, window=label1)
    print(canvas1.create_window(400, 300, window=entry6))
    label2 = tk.Label(root, text= 'Introduzca la distancia (km)')
    label2.config(font=('helvetica', 10))
    canvas1.create_window(400, 350, window=label2)
    print(canvas1.create_window(400, 400, window=entry7))
    label3 = tk.Label(root, text= 'Introduzca la Altura de Antena Transmisora')
    label3.config(font=('helvetica', 10))
    canvas1.create_window(400, 450, window=label3)
    print(canvas1.create_window(400, 500, window=entry8))
    label4 = tk.Label(root, text= 'Introduzca la Altura de Antena Receptora')
    label4.config(font=('helvetica', 10))
    canvas1.create_window(400, 550, window=label4)
    print(canvas1.create_window(400, 600, window=entry9))
    label5 = tk.Label(root, text= 'Introduzca la Altura Media de Edificios')
    label5.config(font=('helvetica', 10))
    canvas1.create_window(400, 650, window=label5)
    print(canvas1.create_window(400, 700, window=entry10))
    label6 = tk.Label(root, text= 'Introduzca la Anchura promedio entre centros de Edificios')
    label6.config(font=('helvetica', 10))
    canvas1.create_window(400, 750, window=label6)        
    button1 = tk.Button(text='Presione para procesar sus datos', command=opwb1, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(400, 790, window=button1)
    button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
    canvas1.create_window(200, 830, window=button2)
    button3 = tk.Button (root, text='Regresar al menú de modelos',command=model,bg='ivory3',fg='white')
    canvas1.create_window(600, 830, window=button3)
def wb():
    canvas1.delete("all")
    canvas1.config(width=600,height=500)
    label1 = tk.Label(root, text='Modelo de propagación Walfisch - Bertoni')
    label1.config(font=('helvetica', 14))
    canvas1.create_window(300, 25, window=label1)
    label2 = tk.Label(root, text="""El modelo Walfisch - Bertoni es un 
    modelo el cual toma en cuenta las pérdias producidas por las 
    difracciones que se producen en las azoteas, no se considera la existencia
    de línea de vista (transmisor - receptor).
    Toma en cuenta el fenómeno de difracción para describir pérdias antes de 
    alcanzar al receptor.

    A=5*log10((b^2)/2+deltahr^2)-9*log10(b)+20*log10(atan((2*deltahr)/2))

    Lex=57.1+A+log10(f)+18*(log10((d-b/2)/deltaht)-log10(1-(((d-b)/2)^2)/(17*deltaht)))

    l=lb+Lex""")
    label2.config(font=('helvetica', 12))
    canvas1.create_window(300, 150, window=label2)
    buttonmaster = tk.Button(text='¿Desea Continuar?', command=opwb, bg='darkblue', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(300, 330, window=buttonmaster)
    button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
    canvas1.create_window(150, 450, window=button2)
    button3 = tk.Button (root, text='Regresar al menú de modelos',command=model,bg='ivory3',fg='white')
    canvas1.create_window(450, 450, window=button3)
def opwi():
    canvas1.delete("all")
    canvas1.config(width=800,height=770)
    label = tk.Label(root, text='Modelo de Walfisch - Ikegami')
    label.config(font=('helvetica', 14))
    canvas1.create_window(400, 50, window=label)
    label0 = tk.Label(root, text="""Rango de funcionamiento: (800 - 2000 MHz), 
    (2 - 50 km (Distancia entre Antenas)), (1-3 m (Altura de antena receptora o móvil))
    (4 - 50 m (Altura de antena Transmisora))""")
    label0.config(font=('helvetica', 14))
    canvas1.create_window(400, 100, window=label0)
    print(canvas1.create_window(267, 200, window=entry5))
    label1 = tk.Label(root, text= 'Introduzca la frecuencia (MHz)')
    label1.config(font=('helvetica', 10))
    canvas1.create_window(267, 250, window=label1)
    print(canvas1.create_window(534, 200, window=entry6))
    label2 = tk.Label(root, text= 'Introduzca la distancia (km)')
    label2.config(font=('helvetica', 10))
    canvas1.create_window(534, 250, window=label2)
    print(canvas1.create_window(267, 300, window=entry7))
    label3 = tk.Label(root, text= 'Introduzca la Altura de Antena Transmisora')
    label3.config(font=('helvetica', 10))
    canvas1.create_window(267, 350, window=label3)
    print(canvas1.create_window(534, 300, window=entry8))
    label4 = tk.Label(root, text= 'Introduzca la Altura de Antena Receptora')
    label4.config(font=('helvetica', 10))
    canvas1.create_window(534, 350, window=label4)
    print(canvas1.create_window(200, 400, window=entry9))
    label5 = tk.Label(root, text= 'Introduzca la Altura Media de Edificios')
    label5.config(font=('helvetica', 10))
    canvas1.create_window(200, 450, window=label5)
    print(canvas1.create_window(601, 400, window=entry10))
    label6 = tk.Label(root, text= 'Introduzca la Anchura promedio entre centros de Edificios (m)')
    label6.config(font=('helvetica', 10))
    canvas1.create_window(601, 450, window=label6)     
    print(canvas1.create_window(400, 500, window=entry11))
    label7 = tk.Label(root, text= 'Introduzca el ángulo entre el rayo de la onda incidente y el eje de la calle')
    label7.config(font=('helvetica', 10))
    canvas1.create_window(400, 550, window=label7) 
    print(canvas1.create_window(400, 600, window=entry12))
    label8 = tk.Label(root, text= 'Introduzca el ancho de la calle del móvil')
    label8.config(font=('helvetica', 10))
    canvas1.create_window(400, 650, window=label8) 
    button1 = tk.Button(text='Presione para procesar sus datos (Line of Sight)', command=opwi1, bg='crimson', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(200, 700, window=button1)
    button2 = tk.Button(text='Presione para procesar sus datos (No Line of Sight)', command=opwi2, bg='indigo', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(600, 700, window=button2)
    button3 = tk.Button(root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
    canvas1.create_window(200, 750, window=button3)
    button4 = tk.Button (root, text='Regresar al menú de modelos',command=model,bg='ivory3',fg='white')
    canvas1.create_window(600, 750, window=button4)
def opwi1():    
    canvas1.delete("all")
    canvas1.config(width=800,height=770)
    f = float(entry5.get())
    d = float(entry6.get())
    l = 42.6+20*log10(f)+26*log10(d)
    labell = tk.Label(root, text= (l,'db'))
    labell.config(font=('helvetica', 14))
    canvas1.create_window(400, 150, window=labell)
    label = tk.Label(root, text='Modelo de Walfisch - Ikegami')
    label.config(font=('helvetica', 14))
    canvas1.create_window(400, 20, window=label)
    label0 = tk.Label(root, text="""Rango de funcionamiento: (800 - 2000 MHz), 
    (2 - 50 km (Distancia entre Antenas)), (1-3 m (Altura de antena receptora o móvil))
    (4 - 50 m (Altura de antena Transmisora))""")
    label0.config(font=('helvetica', 14))
    canvas1.create_window(400, 100, window=label0)
    print(canvas1.create_window(267, 200, window=entry5))
    label1 = tk.Label(root, text= 'Introduzca la frecuencia (MHz)')
    label1.config(font=('helvetica', 10))
    canvas1.create_window(267, 250, window=label1)
    print(canvas1.create_window(534, 200, window=entry6))
    label2 = tk.Label(root, text= 'Introduzca la distancia (km)')
    label2.config(font=('helvetica', 10))
    canvas1.create_window(534, 250, window=label2)
    print(canvas1.create_window(267, 300, window=entry7))
    label3 = tk.Label(root, text= 'Introduzca la Altura de Antena Transmisora')
    label3.config(font=('helvetica', 10))
    canvas1.create_window(267, 350, window=label3)
    print(canvas1.create_window(534, 300, window=entry8))
    label4 = tk.Label(root, text= 'Introduzca la Altura de Antena Receptora')
    label4.config(font=('helvetica', 10))
    canvas1.create_window(534, 350, window=label4)
    print(canvas1.create_window(200, 400, window=entry9))
    label5 = tk.Label(root, text= 'Introduzca la Altura Media de Edificios')
    label5.config(font=('helvetica', 10))
    canvas1.create_window(200, 450, window=label5)
    print(canvas1.create_window(601, 400, window=entry10))
    label6 = tk.Label(root, text= 'Introduzca la Anchura promedio entre centros de Edificios (m)')
    label6.config(font=('helvetica', 10))
    canvas1.create_window(601, 450, window=label6)     
    print(canvas1.create_window(400, 500, window=entry11))
    label7 = tk.Label(root, text= 'Introduzca el ángulo entre el rayo de la onda incidente y el eje de la calle')
    label7.config(font=('helvetica', 10))
    canvas1.create_window(400, 550, window=label7) 
    print(canvas1.create_window(400, 600, window=entry12))
    label8 = tk.Label(root, text= 'Introduzca el ancho de la calle del móvil')
    label8.config(font=('helvetica', 10))
    canvas1.create_window(400, 650, window=label8) 
    button1 = tk.Button(text='Presione para procesar sus datos (Line of Sight)', command=opwi1, bg='crimson', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(200, 700, window=button1)
    button2 = tk.Button(text='Presione para procesar sus datos (No Line of Sight)', command=opwi2, bg='indigo', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(600, 700, window=button2)
    button3 = tk.Button(root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
    canvas1.create_window(200, 750, window=button3)
    button4 = tk.Button (root, text='Regresar al menú de modelos',command=model,bg='ivory3',fg='white')
    canvas1.create_window(600, 750, window=button4)
def opwi2():
    canvas1.delete("all")
    canvas1.config(width=800,height=770)
    f = float(entry5.get())
    d = float(entry6.get())
    lb = 32.45+20*log10(f)+20*log10(d)
    ht = float(entry7.get())
    hr = float(entry8.get())
    hR = float(entry9.get())
    deltaht= ht-hR
    deltahr= hR-hr
    b = float(entry10.get())/100
    psi = float(entry11.get())
    w= float(entry12.get())
    if psi<35:
        ori=-10+0.3571*psi
    elif psi>35 and psi<55:
        ori=2.5+0.0075*(psi-35)
    elif psi>=55 and psi<=90:
        ori=4-0.114*(psi-55)
    
    if deltaht>=0:
        lbsh=-18*log10(1+deltaht)
    else:
        lbsh=0
    
    if deltaht>0:
        ka=54
    elif deltaht<0 and d>=0.5:
        ka=54-0.8*deltaht
    elif deltaht<0 and d<0.5:
        ka=54-1.6*deltaht*d

    if deltaht>=0:
        kd=18
    else:
        kd=18-15*(deltaht/hR)

    if deltaht>0:
        kf=-4+0.7*(f/(925-1))
    elif deltaht<0 and d>=0.5:
        kf=-4+1.5*(f/(925-1))
    lrts=-8.23-10*log10(w)+10*log10(f)+20*log10(deltahr)+ori
    lmsd=lbsh+ka+kd*log10(d)+kf*log10(f)-9*log10(b)
    l=lb+lrts+lmsd
    labell = tk.Label(root, text= (l,'db'))
    labell.config(font=('helvetica', 14))
    canvas1.create_window(400, 150, window=labell)
    label = tk.Label(root, text='Modelo de Walfisch - Ikegami')
    label.config(font=('helvetica', 14))
    canvas1.create_window(400, 20, window=label)
    label0 = tk.Label(root, text="""Rango de funcionamiento: (800 - 2000 MHz), 
    (2 - 50 km (Distancia entre Antenas)), (1-3 m (Altura de antena receptora o móvil))
    (4 - 50 m (Altura de antena Transmisora))""")
    label0.config(font=('helvetica', 14))
    canvas1.create_window(400, 100, window=label0)
    print(canvas1.create_window(267, 200, window=entry5))
    label1 = tk.Label(root, text= 'Introduzca la frecuencia (MHz)')
    label1.config(font=('helvetica', 10))
    canvas1.create_window(267, 250, window=label1)
    print(canvas1.create_window(534, 200, window=entry6))
    label2 = tk.Label(root, text= 'Introduzca la distancia (km)')
    label2.config(font=('helvetica', 10))
    canvas1.create_window(534, 250, window=label2)
    print(canvas1.create_window(267, 300, window=entry7))
    label3 = tk.Label(root, text= 'Introduzca la Altura de Antena Transmisora')
    label3.config(font=('helvetica', 10))
    canvas1.create_window(267, 350, window=label3)
    print(canvas1.create_window(534, 300, window=entry8))
    label4 = tk.Label(root, text= 'Introduzca la Altura de Antena Receptora')
    label4.config(font=('helvetica', 10))
    canvas1.create_window(534, 350, window=label4)
    print(canvas1.create_window(200, 400, window=entry9))
    label5 = tk.Label(root, text= 'Introduzca la Altura Media de Edificios')
    label5.config(font=('helvetica', 10))
    canvas1.create_window(200, 450, window=label5)
    print(canvas1.create_window(601, 400, window=entry10))
    label6 = tk.Label(root, text= 'Introduzca la Anchura promedio entre centros de Edificios (m)')
    label6.config(font=('helvetica', 10))
    canvas1.create_window(601, 450, window=label6)     
    print(canvas1.create_window(400, 500, window=entry11))
    label7 = tk.Label(root, text= 'Introduzca el ángulo entre el rayo de la onda incidente y el eje de la calle')
    label7.config(font=('helvetica', 10))
    canvas1.create_window(400, 550, window=label7) 
    print(canvas1.create_window(400, 600, window=entry12))
    label8 = tk.Label(root, text= 'Introduzca el ancho de la calle del móvil')
    label8.config(font=('helvetica', 10))
    canvas1.create_window(400, 650, window=label8) 
    button1 = tk.Button(text='Presione para procesar sus datos (Line of Sight)', command=opwi1, bg='crimson', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(200, 700, window=button1)
    button2 = tk.Button(text='Presione para procesar sus datos (No Line of Sight)', command=opwi2, bg='indigo', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(600, 700, window=button2)
    button3 = tk.Button(root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
    canvas1.create_window(200, 750, window=button3)
    button4 = tk.Button (root, text='Regresar al menú de modelos',command=model,bg='ivory3',fg='white')
    canvas1.create_window(600, 750, window=button4)
def wi():
    canvas1.delete("all")
    canvas1.config(width=600,height=500)
    label1 = tk.Label(root, text='Modelo de propagación Walfisch - Ikegami')
    label1.config(font=('helvetica', 14))
    canvas1.create_window(300, 25, window=label1)
    label2 = tk.Label(root, text="""El modelo Walfisch - Ikegami se toma en cuenta
    la influencia de edificaciones y calles en las que se encuentra el receptor, y 
    por ello aumenta el grado de predicción de pérdidas de propagación.
    
    l(linea de vista)= 42.6+20*log10(f)+26*log10(d)
    
    l(no linea de vista)=lb+lrts+lmsd
    
    lrts=-8.23-10*log10(w)+10*log10(f)+20*log10(deltahr)+ori
    
    lmsd=lbsh+ka+kd*log10(d)+kf*log10(f)-9*log10(b)""")
    label2.config(font=('helvetica', 12))
    canvas1.create_window(300, 150, window=label2)
    buttonmaster = tk.Button(text='¿Desea Continuar?', command=opwi, bg='darkblue', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(300, 330, window=buttonmaster)
    button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
    canvas1.create_window(150, 450, window=button2)
    button3 = tk.Button (root, text='Regresar al menú de modelos',command=model,bg='ivory3',fg='white')
    canvas1.create_window(450, 450, window=button3)
def tf():
    canvas1.delete("all")
    print(canvas1.create_window(200, 100, window=entry3))
    button1 = tk.Button(text='Introduzca la opción deseada (Hertz a Segundos)', command=tft, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(200, 140, window=button1)
    button3 = tk.Button(text='Introduzca la opción deseada (Segundos a Hertz)', command=tff, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(200, 180, window=button3)
    button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
    canvas1.create_window(100, 250, window=button2)
    button4 = tk.Button (root, text='Regresar al menú anterior',command=conver,bg='indigo',fg='white')
    canvas1.create_window(300, 250, window=button4)
def tft():
    canvas1.delete("all")
    try:
        print(canvas1.create_window(200, 100, window=entry3))
        x2 = float(entry3.get())
        x3=1/x2
        label4 = tk.Label(root, text= (x3,'s'))
        label4.config(font=('helvetica', 10))
        button1 = tk.Button(text='Introduzca la opción deseada (Hertz a Segundos)', command=tft, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
        canvas1.create_window(200, 140, window=button1)
        button3 = tk.Button(text='Introduzca la opción deseada (Segundos a Hertz)', command=tff, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
        canvas1.create_window(200, 180, window=button3)
        canvas1.create_window(200, 230, window=label4)
        button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
        canvas1.create_window(100, 250, window=button2)
        button4 = tk.Button (root, text='Regresar al menú anterior',command=conver,bg='indigo',fg='white')
        canvas1.create_window(300, 250, window=button4)
    except ValueError:
        label4 = tk.Label(root, text= "Valor invalido, intentelo otra vez")
        label4.config(font=('helvetica', 10))
        button1 = tk.Button(text='Introduzca la opción deseada (Hertz a Segundos)', command=tft, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
        canvas1.create_window(200, 140, window=button1)
        button3 = tk.Button(text='Introduzca la opción deseada (Segundos a Hertz)', command=tff, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
        canvas1.create_window(200, 180, window=button3)
        canvas1.create_window(200, 210, window=label4)
        button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
        canvas1.create_window(100, 250, window=button2)
        button4 = tk.Button (root, text='Regresar al menú anterior',command=conver,bg='indigo',fg='white')
        canvas1.create_window(300, 250, window=button4)

def tff():
    canvas1.delete("all")
    try:
        print(canvas1.create_window(200, 100, window=entry3))
        x2 = float(entry3.get())
        x3=1/x2
        label4 = tk.Label(root, text= (x3,'Hz'))
        label4.config(font=('helvetica', 10))
        canvas1.create_window(200, 230, window=label4)
        button1 = tk.Button(text='Introduzca la opción deseada (Hertz a Segundos)', command=tft, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
        canvas1.create_window(200, 140, window=button1)
        button3 = tk.Button(text='Introduzca la opción deseada (Segundos a Hertz)', command=tff, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
        canvas1.create_window(200, 180, window=button3)
        button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
        canvas1.create_window(200, 250, window=button2)
    except ValueError:
        label4 = tk.Label(root, text= "Valor invalido, intentelo otra vez")
        label4.config(font=('helvetica', 10))
        canvas1.create_window(200, 210, window=label4)
        button1 = tk.Button(text='Introduzca la opción deseada (Hertz a Segundos)', command=tft, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
        canvas1.create_window(200, 140, window=button1)
        button3 = tk.Button(text='Introduzca la opción deseada (Segundos a Hertz)', command=tff, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
        canvas1.create_window(200, 180, window=button3)
        button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
        canvas1.create_window(100, 250, window=button2)
        button4 = tk.Button (root, text='Regresar al menú anterior',command=conver,bg='indigo',fg='white')
        canvas1.create_window(300, 250, window=button4)

def db():
    canvas1.delete("all")
    print(canvas1.create_window(200, 100, window=entry4))
    button1 = tk.Button(text='Introduzca la opción deseada (Decibeles a Watts)', command=dbw, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(200, 140, window=button1)
    button3 = tk.Button(text='Introduzca la opción deseada (Watts a Decibeles)', command=dbd, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
    canvas1.create_window(200, 180, window=button3)
    button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
    canvas1.create_window(100, 250, window=button2)
    button4 = tk.Button (root, text='Regresar al menú anterior',command=conver,bg='indigo',fg='white')
    canvas1.create_window(300, 250, window=button4)
def dbw():
    canvas1.delete("all")
    try:
        print(canvas1.create_window(200, 100, window=entry4))
        x2 = float(entry4.get())
        x3= 10**(x2/10)
        label4 = tk.Label(root, text= (x3,'W'))
        label4.config(font=('helvetica', 10))
        canvas1.create_window(200, 230, window=label4)
        button1 = tk.Button(text='Introduzca la opción deseada (Decibeles a Watts)', command=dbw, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
        canvas1.create_window(200, 140, window=button1)
        button3 = tk.Button(text='Introduzca la opción deseada (Watts a Decibeles)', command=dbd, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
        canvas1.create_window(200, 180, window=button3)
        button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
        canvas1.create_window(100, 250, window=button2)
        button4 = tk.Button (root, text='Regresar al menú anterior',command=conver,bg='indigo',fg='white')
        canvas1.create_window(300, 250, window=button4)
    except ValueError:
        print(canvas1.create_window(200, 100, window=entry4))
        label4 = tk.Label(root, text= "Valor invalido, intentelo otra vez")
        label4.config(font=('helvetica', 10))
        canvas1.create_window(200, 210, window=label4)
        button1 = tk.Button(text='Introduzca la opción deseada (Decibeles a Watts)', command=dbw, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
        canvas1.create_window(200, 140, window=button1)
        button3 = tk.Button(text='Introduzca la opción deseada (Watts a Decibeles)', command=dbd, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
        canvas1.create_window(200, 180, window=button3)
        button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
        canvas1.create_window(100, 250, window=button2)
        button4 = tk.Button (root, text='Regresar al menú anterior',command=conver,bg='indigo',fg='white')
        canvas1.create_window(300, 250, window=button4)

def dbd():
    canvas1.delete("all")
    try:
        print(canvas1.create_window(200, 100, window=entry4))
        x2 = float(entry4.get())
        if x2<0:
            x2=x2-(2*x2)
        x3= 10*log10(x2/1)
        x4=x3-30
        label4 = tk.Label(root, text= (x3,'db'))
        label4.config(font=('helvetica', 10))
        label5 = tk.Label(root, text= (x4,'dbm'))
        label5.config(font=('helvetica', 10))
        canvas1.create_window(200, 210, window=label4)
        canvas1.create_window(200, 230, window=label5)
        button1 = tk.Button(text='Introduzca la opción deseada (Decibeles a Watts)', command=dbw, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
        canvas1.create_window(200, 140, window=button1)
        button3 = tk.Button(text='Introduzca la opción deseada (Watts a Decibeles)', command=dbd, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
        canvas1.create_window(200, 180, window=button3)
        button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
        canvas1.create_window(100, 250, window=button2)
        button4 = tk.Button (root, text='Regresar al menú anterior',command=conver,bg='indigo',fg='white')
        canvas1.create_window(300, 250, window=button4)    
    except ValueError:
        label4 = tk.Label(root, text= "Valor invalido, intentelo otra vez")
        label4.config(font=('helvetica', 10))
        canvas1.create_window(200, 210, window=label4)
        button1 = tk.Button(text='Introduzca la opción deseada (Decibeles a Watts)', command=dbw, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
        canvas1.create_window(200, 140, window=button1)
        button3 = tk.Button(text='Introduzca la opción deseada (Watts a Decibeles)', command=dbd, bg='orange', fg='white', font=('helvetica', 9, 'bold'))
        canvas1.create_window(200, 180, window=button3)
        button2 = tk.Button (root, text='Regresar al menú principal',command=regreso,bg='red4',fg='white')
        canvas1.create_window(100, 250, window=button2)
        button4 = tk.Button (root, text='Regresar al menú anterior',command=conver,bg='indigo',fg='white')
        canvas1.create_window(300, 250, window=button4)  

buttonmaster = tk.Button(text='Introduzca la opción deseada', command=opmenu, bg='red4', fg='white', font=('helvetica', 9, 'bold'))
canvas1.create_window(200, 180, window=buttonmaster)
root.mainloop()
